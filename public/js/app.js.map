{"version":3,"file":"../../public/js/app.js","sources":["app/app.coffee","app/scripts/controllers.coffee","app/scripts/controllers/app.coffee","app/scripts/controllers/grist.coffee","app/scripts/controllers/tracks.coffee","app/scripts/directives.coffee","app/scripts/directives/select2-model-watcher.coffee","app/scripts/filters.coffee","app/scripts/services.coffee","app/scripts/services/grist.coffee","app/scripts/services/lexers.coffee","app/scripts/services/popular_lexers.coffee"],"names":[],"mappings":"AAAA;;;AAGA,CAHA,CAG4B,CAA5B,EAAM,EAAO,GAAe;;AAY5B,CAfA,EAeG,GAAH;EAEE,CADA,GAGF,GAAC,KAAD,EAJW,CAIX,EAJW;CAMT;CAQkB,GAAlB,aAAiB;CAdR,EAIX;CAnBA,CAeA;A,CCfA,CAAQ,CAA0B,IAAlC,CAAO,UAAP;A,CCAA,CAAQ,CAEe,IAFvB,CAAO,EAAP;EAIE,CADA,GAKF,EANuB,CAMtB,CAAD,CANuB;CAUrB,EAAmB,CAAnB,EAAM,GAAN;EACkC,EAAlC,EAAM,GAA6B,SAAnC;CACS,EAAc,GAAf,KAAN;CADF,IAAkC;CAY3B,CAAW,IAAZ,EAAN,CAAmB,EAAnB;CACE,CAAmC,EAAhC,CAA8C,CAAjD,GAAG,EAAkB;CACnB,cAAO;MADT;CAGE,cAAO;OAJO;CAjBpB,IAiBoB;CAvBG,EAMvB;CARA;A,CCAA,CAAQ,CACmB,IAD3B,CAAO,EACqB,CAD5B,GAC2B,IAD3B;CAEI,EAAe,CAAf,EAAM;CAAN,CACA,CAAgB,GAAV;CADN,CAEA,CAAuB,GAAjB,OAAN;CAFA,CAGA,CAAe,CAHf,CAGA,CAAM;CAKC,EAAS,GAAV,GAAN;CACE,EAAe,CAAf,EAAM;CACJ,CAAO,GAAP;EACQ,IAAR;CAFF,KAAe;CADD,UAKd;CAdqB,EASP;CATO;A,CCD3B,CAAQ,CACoB,IAD5B,CAAO,EACsB,CAD7B;CAEI,EAAgB,GAAV,GAAU;CACT,EAAP,GAAM,GAAN;CAFwB;A,CCD5B,CAAQ,CAAyB,IAAjC,CAAO,OAA0B,EAAjC;A,CCAA,CAAQ,CAAyB,CACG,GADpC,CAAO,EAAP;SAEI;EAAS,CAAT;EACS,EAAT,MADA;EAEM,EAAN,CAAM,IAAC;CACL;OAAa;CAEL,EAAU,IAAX,EAAW,IAAlB;CACE,EAAG,IAAY,CAAf;CACW,SAAX;CAAkB,EAAD,IAAH;CAAd,QAAW;CALT,MAGc;CALpB,IAEM;CAH0B;;A,CCDpC,CAAQ,CAAsB,IAA9B,CAAO,MAAP;A,CCAA,CAAQ,CAAuB,IAA/B,CAAO,OAAP;A,CCAA,CAAQ,CACY,IADpB,CAAO,EACc,KADrB;CAGI;GAAM,CAAL;CAEA,EAAS,CAAT,CAAS,CAAV;CACE;EAAiC,CAAjC,EAAW,SAAL;CAEF,EAAD,IAAH,EAAa,EAAb;CACG,CAAD,CAAM,EAAL,QAAD;CADF,IAAY;CAPE,EAIN;CAJM;A,CCDpB,CAAQ,CACa,IADrB,CAAO,CAAP,CACqB,KADrB;CAC+B,KAAD,GAAN;CAAH;A,CCDrB,CAAQ,CACoB,IAD5B,CAAO,EACqB,KAD5B;CAGM,CACA,GAFF;CADwB;A","sourcesContent":["'use strict'\n\n# Declare app level module which depends on filters, and services\nApp = angular.module('app', [\n  'ngCookies'\n  'ngResource'\n  'app.controllers'\n  'app.directives'\n  'app.filters'\n  'app.services'\n  'partials',\n  'ui.select2',\n  'ui.bootstrap'\n])\n\nApp.config([\n  '$routeProvider'\n  '$locationProvider'\n\n($routeProvider, $locationProvider, config) ->\n\n  $routeProvider\n\n    # .when('/', {templateUrl: '/partials/index.html'})\n\n    # Catch all\n    # .otherwise({redirectTo: '/'})\n\n  # Without server side support html5 must be disabled.\n  $locationProvider.html5Mode(true)\n])\n","angular.module 'app.controllers', []","angular.module('app.controllers')\n\n.controller('AppCtrl', [\n  '$scope'\n  '$location'\n  '$resource'\n  '$rootScope'\n\n($scope, $location, $resource, $rootScope) ->\n\n  # Uses the url to determine if the selected\n  # menu item should have the class active.\n  $scope.$location = $location\n  $scope.$watch('$location.path()', (path) ->\n    $scope.activeNavId = path || '/'\n  )\n\n  # getClass compares the current url with the id.\n  # If the current url starts with the id it returns 'active'\n  # otherwise it will return '' an empty string. E.g.\n  #\n  #   # current url = '/products/1'\n  #   getClass('/products') # returns 'active'\n  #   getClass('/orders') # returns ''\n  #\n  $scope.getClass = (id) ->\n    if $scope.activeNavId.substring(0, id.length) == id\n      return 'active'\n    else\n      return ''\n])","angular.module('app.controllers')\n  .controller 'GristCtrl', ($scope, $location, $resource, $rootScope, $http, lexers, popularLexers, Grist) ->\n    $scope.lexer = null\n    $scope.lexers = lexers\n    $scope.popularLexers = popularLexers\n    $scope.grist = null\n\n    #\n    # Create a grist\n    #\n    $scope.create = ( $event ) ->\n      $scope.grist = Grist.create\n        lexer: $scope.lexer\n        source: $scope.source\n\n      false\n","angular.module('app.controllers')\n  .controller 'TracksCtrl', ($scope, $location, $resource, $rootScope) ->\n    $scope.tracks = $resource '/api/music/tracks'\n    $scope.tracks.get()","angular.module 'app.directives', [\n  'app.services'\n]\n","angular.module('app.directives', [])\n  .directive 'select2ModelWatcher', ->\n    restrict:'A',\n    require: '?ngModel',\n    link: (scope, element, attr, ngModel) ->\n      sel = element.select2()\n\n      ngModel.$render = ->\n        sel.val ngModel.$viewValue\n        setTimeout -> sel.trigger \"change\"\n","angular.module 'app.filters', []","angular.module 'app.services', []","angular.module('app.services')\n  .service \"Grist\", ($http) ->\n\n    @id = null\n\n    @create = (attrs) =>\n      req = $http.post('/api/1/grist', attrs)\n\n      req.success (res) =>\n        @id = res.id\n","angular.module('app.services')\n  .factory \"lexers\", -> window.appConfig.lexers\n\n","angular.module('app.services')\n  .factory \"popularLexers\", ->\n    [\n      \"Text only\"\n      \"Python\"\n      \"JavaScript\"\n      \"Ruby\"\n      \"CSS\"\n      \"HTML\"\n      \"Django/Jinja\"\n    ]"]}