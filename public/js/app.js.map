{"version":3,"file":"../../public/js/app.js","sources":["app/app.coffee","app/scripts/controllers.coffee","app/scripts/controllers/tracks.coffee","app/scripts/directives.coffee","app/scripts/filters.coffee","app/scripts/services.coffee","app/scripts/services/music/tracks.coffee"],"names":[],"mappings":"AAAA;;;AAGA,CAHA,CAG4B,CAA5B,EAAM,EAAO,GAAe;;AAW5B,CAdA,EAcG,GAAH;EAEE,CADA,GAGF,GAAC,KAAD,EAJW,CAIX,EAJW;CAMT,CAEa,CAFb,WAEE;CAAW,CAAc,IAAb,gBAAD;CAMX,KARF;CAQa,CAAa,CAAb,GAAC;CARd;CAWkB,GAAlB,aAAiB;CAjBR,EAIX;CAlBA,CAcA;A,CCdA;CAEA;AAFA;AAIA,CAJA,CAIkC,IAAlC,CAAO,EAAP;EAIE,CADA,GAKF,EANuB,CAMtB,CAAD,CANuB;CAUrB,EAAmB,CAAnB,EAAM,GAAN;EACkC,EAAlC,EAAM,GAA6B,SAAnC;CACS,EAAc,GAAf,KAAN;CADF,IAAkC;CAY3B,CAAW,IAAZ,EAAN,CAAmB,EAAnB;CACE,CAAmC,EAAhC,CAA8C,CAAjD,GAAG,EAAkB;CACnB,cAAO;MADT;CAGE,cAAO;OAJO;CAjBpB,IAiBoB;CAvBG,EAMvB;CAwBA,CAhCA;EAmCA,CAFE,GAEF,EAHuB,CAGtB;CACQ,EAAa,GAAd,IAAN;CAJqB,EAGvB;CAIA,CAvCA;EA0CA,CAFE,GAEF,EAHuB,CAGtB;CAAD,UACE;CAJqB,EAGvB;CAIA,CA9CA;EAiDA,CAFE,GAEF,EAHwB,CAGvB;CAEC,EAAe,CAAf,EAAM;OACJ;EAAM,EAAN;EACM,EAAN;EAEA,MAJa;CAIb,CAAM,EAAN;EACM,EAAN,CADA,GACA;OALa;CAAf;GAQiB,CAAjB,EAAM,CAAN,EAAiB;CACf,IAAY,CAAZ;CACE,CAAM,EAAN,EAAY,EAAZ;EACM,EAAN,CADA,GACA;CAFF;CAIO,EAAW,GAAZ,EAAN;CAbF,IAQiB;CARjB,EAemB,CAAnB,EAAM,GAAN;CACE;GAAQ,EAAR;EAC8B,GAA9B,EAAO,EAAwB;CAChB,EAAe,CAAnB,CAAT;CADF,MAA8B;CAFb,YAKjB;CApBF,IAemB;CAOZ,EAAU,GAAX,CAAN,EAAiB,EAAjB;CACE;GAAW,EAAX;GACe,EAAf;CACQ,CAAkB,KAAnB,CAAP,CAA2B,IAA3B;AACiC,CAA/B;CAAO,GAAP,CAAY,CAAN,WAAN;SADwB;CAA1B,MAA0B;CA3B9B,IAwBmB;CA3BK,EAGxB;CArDA,CAIA;A,CCFA,CAAQ,CACkB,IAD1B,CAAO,EACoB,CAD3B;CAEE,EAAgB,GAAV,GAAU;CACT,EAAP,GAAM,GAAN;CAFwB;A,CCH1B;CAEA;AAFA;AAKA,CALA,CAKiC,IAAjC,CAAO,EAAP,KAAiC,EAAjC;EAQA,CAFE,IAEF,EAHyB;EAKf,CAAR,MAAC,EAAD;CACM,EAAD,CAAH;CAHJ,IAEE;CALuB,EAGzB;CAbA,CAKA;A,CCLA;CAEA;AAFA;AAIA,CAJA,CAI8B,IAA9B,CAAO,MAAP;EAKA,CAFE,IAEF,EAHuB;GAIrB,MAAC,EAAD;CACS,CAA+B,EAAtC;CAFJ,IACE;CAJqB,EAGvB;CATA,CAIA;A,CCJA;CAEA;AAFA;AAIA,CAJA,CAI+B,CAEX,GAFpB,CAAO,EAAP;CAEoB,QAAG;CAAH;A,CCgD0D;A","sourcesContent":["'use strict'\n\n# Declare app level module which depends on filters, and services\nApp = angular.module('app', [\n  'ngCookies'\n  'ngResource'\n  'app.controllers'\n  'app.directives'\n  'app.filters'\n  'app.services'\n  'partials',\n  'ui.select2'\n])\n\nApp.config([\n  '$routeProvider'\n  '$locationProvider'\n\n($routeProvider, $locationProvider, config) ->\n\n  $routeProvider\n\n    .when('/', {templateUrl: '/partials/index.html'})\n    # .when('/todo', {templateUrl: '/partials/todo.html'})\n    # .when('/view1', {templateUrl: '/partials/partial1.html'})\n    # .when('/view2', {templateUrl: '/partials/partial2.html'})\n\n    # Catch all\n    .otherwise({redirectTo: '/'})\n\n  # Without server side support html5 must be disabled.\n  $locationProvider.html5Mode(true)\n])\n","'use strict'\n\n### Controllers ###\n\nangular.module('app.controllers', [])\n\n.controller('AppCtrl', [\n  '$scope'\n  '$location'\n  '$resource'\n  '$rootScope'\n\n($scope, $location, $resource, $rootScope) ->\n\n  # Uses the url to determine if the selected\n  # menu item should have the class active.\n  $scope.$location = $location\n  $scope.$watch('$location.path()', (path) ->\n    $scope.activeNavId = path || '/'\n  )\n\n  # getClass compares the current url with the id.\n  # If the current url starts with the id it returns 'active'\n  # otherwise it will return '' an empty string. E.g.\n  #\n  #   # current url = '/products/1'\n  #   getClass('/products') # returns 'active'\n  #   getClass('/orders') # returns ''\n  #\n  $scope.getClass = (id) ->\n    if $scope.activeNavId.substring(0, id.length) == id\n      return 'active'\n    else\n      return ''\n])\n\n.controller('MyCtrl1', [\n  '$scope'\n\n($scope) ->\n  $scope.onePlusOne = 2\n])\n\n.controller('MyCtrl2', [\n  '$scope'\n\n($scope) ->\n  $scope\n])\n\n.controller('TodoCtrl', [\n  '$scope'\n\n($scope) ->\n\n  $scope.todos = [\n    text: \"learn angular\"\n    done: true\n  ,\n    text: \"build an angular app\"\n    done: false\n  ]\n\n  $scope.addTodo = ->\n    $scope.todos.push\n      text: $scope.todoText\n      done: false\n\n    $scope.todoText = \"\"\n\n  $scope.remaining = ->\n    count = 0\n    angular.forEach $scope.todos, (todo) ->\n      count += (if todo.done then 0 else 1)\n\n    count\n\n  $scope.archive = ->\n    oldTodos = $scope.todos\n    $scope.todos = []\n    angular.forEach oldTodos, (todo) ->\n      $scope.todos.push todo  unless todo.done\n\n])\n\n","# angular.module('app.controllers', [])\n\nangular.module('app.controllers')\n.controller 'TracksCtrl', ($scope, $location, $resource, $rootScope) ->\n  $scope.tracks = $resource '/api/music/tracks'\n  $scope.tracks.get()","'use strict'\n\n### Directives ###\n\n# register the module with Angular\nangular.module('app.directives', [\n  # require the 'app.service' module\n  'app.services'\n])\n\n.directive('appVersion', [\n  'version'\n\n(version) ->\n\n  (scope, elm, attrs) ->\n    elm.text(version)\n])\n","'use strict'\n\n### Filters ###\n\nangular.module('app.filters', [])\n\n.filter('interpolate', [\n  'version',\n\n(version) ->\n  (text) ->\n    String(text).replace(/\\%VERSION\\%/mg, version)\n])\n","'use strict'\n\n### Sevices ###\n\nangular.module('app.services', [])\n\n.factory 'version', -> \"0.1\"\n","# angular.module('app.services', [])\n\n# .factory \"Tracks\", ($http) ->\n#   getAll: ->\n#     $http.get(\"/api/music/tracks\")\n\n"]}